services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    expose:
      - "2181"

  kafka:
    container_name: kafka_broker
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka_broker
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS_SEPARATOR: $'\n'
      KAFKA_CREATE_TOPICS: |
        ""
        ""
        ""
        "..."

  chart_aggregation:
    container_name: chart_aggregation_ms
    build: ../chart_aggregation_ms
    env_file: ../chart_aggregation_ms/.env
    environment:
      NODE_ENV: production
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "3000"
    expose:
      - "3000"

  user_authentication:
    container_name: user_authentication_ms
    build: ../user_authentication_ms
    env_file: ../user_authentication_ms/.env
    environment:
      HTTP_HOST: "0.0.0.0"
      HTTP_PORT: "3001"
      GOOGLE_CLIENT_ID: ""
    expose:
      - "3001"

  nginx:
    image: nginx:latest
    depends_on:
      - mycharts-frontend
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  # This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka:5.1.1
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-line-basic && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-line-basic && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-line-annotations && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-line-annotations && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-basic-column && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-basic-column && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-pie && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-pie && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-dependency-wheel && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-dependency-wheel && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-network-graph && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-network-graph && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-polar && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-polar && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-word-cloud && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-word-cloud && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic csv-chart-organization && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic svg-chart-organization && \
                       echo Waiting 60 seconds for Connect to be ready... && \
                       sleep 60'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyway, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  mycharts-data-uploader:
    build:
      context: ../microservice-data-uploader
      dockerfile: Dockerfile
    volumes:
      - ../microservice-data-uploader:/app
    ports:
      - "3001:3001"

  mycharts-frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "3000:3000"

  chart-line-basic:
    build:
      context: ../microservice-chart-line-basic
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
      - mycharts-data-uploader
    ports:
      - "3003:3003"

  store-line-basic:
    build:
      context: ../microservice-store-line-basic
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3020:3020"

  store-basic-column:
    build:
      context: ../microservice-store-basic-column
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3021:3021"

  store-pie-chart:
    build:
      context: ../microservice-store-pie-chart
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3022:3022"

  store-line-annotations:
    build:
      context: ../microservice-store-line-annotations
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3023:3023"

  store-dependency-wheel:
    build:
      context: ../microservice-store-dependency-wheel
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3024:3024"

  store-network-graph:
    build:
      context: ../microservice-store-network-graph
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3025:3025"

  store-polar-chart:
    build:
      context: ../microservice-store-polar-chart
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3026:3026"

  store-word-cloud:
    build:
      context: ../microservice-store-word-cloud
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3027:3027"

  store-organization-chart:
    build:
      context: ../microservice-store-organization-chart
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
    ports:
      - "3028:3028"

  diagram-fetcher:
    build:
      context: ../microservice-diagram-fetcher
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - kafka-setup
      - mycharts-data-uploader
    ports:
      - "3030:3030"